@model AspNetCoreMvc20.Data.PaginatedList<AspNetCoreMvc20.Models.Student>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <action-text><a asp-action="Create">Create New</a></action-text>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <heading-text>Find by name: </heading-text><input type="text" name="SearchString" placeholder="abcdef" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="link transition_color" />
            <action-text><a class="link transition_color" asp-action="Index">Back to Full List</a></action-text>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <heading-text><a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Last Name</a></heading-text>
            </th>
            <th>
                <heading-text>First Name</heading-text>
            </th>
            <th>
                <heading-text><a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Enrollment Date</a></heading-text>
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnrollmentDate)
            </td>
            <td>
                <a class="link transition_color" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                <a class="link transition_color" asp-action="Details" asp-route-id="@item.Id">Details</a>
                <a class="link transition_color" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="link transition_color @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="link transition_color @nextDisabled">
    Next
</a>
